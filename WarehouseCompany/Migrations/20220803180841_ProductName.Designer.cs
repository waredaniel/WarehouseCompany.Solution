// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehouseCompany.Models;

namespace WarehouseCompany.Migrations
{
    [DbContext(typeof(WarehouseCompanyContext))]
    [Migration("20220803180841_ProductName")]
    partial class ProductName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WarehouseCompany.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProductName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WarehouseCompany.Models.ProductSupplier", b =>
                {
                    b.Property<int>("ProductSupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductSupplierDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProductSupplierPrice")
                        .HasColumnType("int");

                    b.Property<string>("ProductSupplierQuantity")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProductSupplierStatus")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("ProductSupplierId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductSupplier");
                });

            modelBuilder.Entity("WarehouseCompany.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupplierCountry")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SupplierName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("WarehouseCompany.Models.ProductSupplier", b =>
                {
                    b.HasOne("WarehouseCompany.Models.Product", "Product")
                        .WithMany("JoinEntities")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseCompany.Models.Supplier", "Supplier")
                        .WithMany("JoinEntities")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("WarehouseCompany.Models.Product", b =>
                {
                    b.Navigation("JoinEntities");
                });

            modelBuilder.Entity("WarehouseCompany.Models.Supplier", b =>
                {
                    b.Navigation("JoinEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
